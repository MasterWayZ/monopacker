version: 1
policy:
  pullRequests: collaborators
tasks:
  - $if: '(tasks_for == "github-pull-request" && event["action"] in ["opened", "reopened", "synchronize"])'
    then:
      taskId: { $eval: as_slugid("test") }
      created: { $fromNow: "" }
      deadline: { $fromNow: "2 hours" }
      provisionerId: proj-taskcluster
      workerType: ci
      payload:
        maxRunTime: 3600
        image: taskcluster/monopacker:build
        command:
          - /bin/bash
          - --login
          - -cx
          - |
            CHECKOUT_DIR="/monopacker_checkout" &&
            git clone "${event.pull_request.head.repo.clone_url}" "$CHECKOUT_DIR" &&
            cd "$CHECKOUT_DIR" &&
            git checkout "${event.pull_request.head.sha}" &&
            pip install --no-use-pep517 -r requirements.txt &&
            python setup.py test &&
            pip install pip-tools &&
            ./pipupdate.sh &&
            if ! output=$(git status --porcelain) || [ -n "$output" ]; then
                echo "*** ./pipupdate.sh produced changes to the repository; these changes should be checked in ***";
                git --no-pager diff;
                exit 1;
            fi
      metadata:
        name: monopacker tests
        description: runs tests, validates default packer builders
        owner: taskcluster-internal@mozilla.com
        source: ${event.pull_request.head.repo.url}
  - $if: 'tasks_for == "github-push"'
    then:
      taskId: { $eval: as_slugid("test") }
      created: { $fromNow: "" }
      deadline: { $fromNow: "2 hours" }
      provisionerId: proj-taskcluster
      workerType: ci
      payload:
        maxRunTime: 3600
        image: taskcluster/monopacker:build
        command:
          - /bin/bash
          - --login
          - -cx
          - |
            CHECKOUT_DIR="/monopacker_checkout" &&
            git clone "${event.repository.url}" "$CHECKOUT_DIR" &&
            cd "$CHECKOUT_DIR" &&
            git checkout "${event.after}" &&
            pip install -r requirements.txt &&
            python setup.py test
      metadata:
        name: monopacker tests
        description: runs tests, validates default packer builders
        owner: taskcluster-internal@mozilla.com
        source: ${event.repository.url}
  - $if: 'tasks_for == "github-push"'
    then:
      $if: 'event.ref == "refs/heads/master"'
      then:
        taskId: { $eval: as_slugid("bake") }
        created: { $fromNow: "" }
        deadline: { $fromNow: "2 hours" }
        provisionerId: proj-taskcluster
        workerType: ci
        scopes:
          - secrets:get:project/taskcluster/monopacker/gcloud_service_account
          - secrets:get:project/taskcluster/monopacker/worker_secrets_yaml
        payload:
          maxRunTime: 36000
          features:
            taskclusterProxy: true
          image: taskcluster/monopacker:build
          command:
            - /bin/bash
            - --login
            - -cx
            - |
              mkdir /secrets
              curl -s -L $TASKCLUSTER_PROXY_URL/api/secrets/v1/secret/project/taskcluster/monopacker/gcloud_service_account  | jq '.secret' > /secrets/service_account.json
              # secrets format is a list, .secret has to be an object so we wrap the secret in .contents[]
              curl -s -L $TASKCLUSTER_PROXY_URL/api/secrets/v1/secret/project/taskcluster/monopacker/worker_secrets_yaml | jq '.secret.contents' > /secrets/worker_secrets.yaml
              export GOOGLE_APPLICATION_CREDENTIALS=/secrets/service_account.json
              CHECKOUT_DIR="/monopacker_checkout"
              git clone "${event.repository.url}" "$CHECKOUT_DIR"
              cd "$CHECKOUT_DIR"
              git checkout "${event.after}"
              python setup.py install
              monopacker build docker_worker_gcp --secrets_file=/secrets/worker_secrets.yaml
          artifacts:
            "packer-artifacts.json":
              type: file
              path: /monopacker_checkout/packer-artifacts.json
              expires: { $fromNow: "1 year" }
        metadata:
          name: bake images
          description: bake docker_worker_gcp
          owner: taskcluster-internal@mozilla.com
          source: ${event.repository.url}
